#####################################################################
#  CanBus
#####################################################################
# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
canbus_uuid: b834cb2eb68d

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 90, 90, 20
accel_chip: beacon

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
gear_ratio: 9:1
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
microsteps: 16
rotation_distance: 47.32344
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_cross_section: 75.0
heater_pin: EBBCan:PB13
sensor_pin: EBBCan: PA3
sensor_type: PT1000 # Rapido2 without the 4 pin connector
#sensor_type: ATC Semitec 104GT-2 # Revo
#sensor_type: MAX31865 # Old Rapido 1/2 connection using SPI (Not Needed)
#sensor_pin: EBBCan:PA4  # if your can mcu is called something other than ebb, change that
#spi_bus: spi1
#rtd_nominal_r: 1000   # for a PT100, this would be 100 instead of 1000
#rtd_reference_r: 4300 # for a PT100, this would be 430 instead of 4300
#rtd_num_of_wires: 2   # for a 4 wire connection, this would  be 4 instead of 2
min_temp: 10
max_temp: 325
max_power: 0.65
pwm_cycle_time: 0.02
smooth_time: 0.5
control: pid
pid_Kp: 17.317
pid_Ki: 1.776
pid_Kd: 42.211

##	Try to keep pressure_advance below 1.0
pressure_advance: 0.0556
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.020

[firmware_retraction]
# G10 to retract and G11 to unrectract
retract_length:10
unretract_extra_length: 1
retract_speed: 35
unretract_speed: 35


[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.6
stealthchop_threshold: 99999



[fan]
pin: EBBCan: PA1

[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
heater_temp: 40

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PF4   

[temperature_sensor SB2209]
sensor_type: Generic 3950 
sensor_pin: EBBCan: PA2

#[safe_z_home]
#home_xy_position: 150, 150 # update for your machine
#z_hop: 3

#[heater_fan 4W_FAN0]
#pin: EBBCan: PB14
#tachometer_pin: EBBCan: PB15
#tachometer_ppr: 1

#[neopixel hotend_rgb]
#pin: EBBCan:PD3

## NPN and PNP proximity switch types can be set by jumper
#[probe]
#x_offset: 0
#y_offset: 0
#speed: 10.0
#samples: 2
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.0075
#samples_tolerance_retries: 5
#pin: EBBCan: PB5
#activate_gcode:
#   {% set PROBE_TEMP = 150 %}
#   {% set MAX_TEMP = PROBE_TEMP + 5 %}
#   {% set ACTUAL_TEMP = printer.extruder.temperature %}
#   {% set TARGET_TEMP = printer.extruder.target %}
#
#   {% if TARGET_TEMP > PROBE_TEMP %}
#       { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#       M109 S{ PROBE_TEMP }
#   {% else %}
#        # Temperature target is already low enough, but nozzle may still be too hot.
#       {% if ACTUAL_TEMP > MAX_TEMP %}
#           { action_respond_info('Extruder temperature of %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#           TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#       {% endif %}
#   {% endif %}
    